This is a compilation of notes to be used as supplementary material for
an arch linux install. Use alongside the installation guide found at 
wiki.archlinux.org.

/***********************/
/* 1. Pre-installation */
/***********************/

1.1 Acqure an installation image
1.2 Verify signature
1.3 Prepare an installation medium
  -use a fresh arch iso
  -dd command is easiest:

    $ dd bs=4M if=path/to/archlinux.iso of=/dev/flashDrive
         conv=fsync oflag=direct status=progress

1.4 Boot the live environment
1.5 Set the console keyboard layout and font
1.6 Verify the boot mode 
1.7 Connect to the internet
  -If you're wired then just plug in the ethernet and it should work fine.
  -If using wifi, connect to the network with iwctl.
    
    # iwctl                   // this will give you an interactive prompt
    [iwd]# device list                 // get the name of wireless device
    [iwd]# station *device* scan            // scan for wireless networks
    [iwd]# station *device* get-networks                 // list networks
    [iwd]# station *device* connect *SSID*          // connect to network
    
  -enter the password when prompted and then exit with Ctrl+d.
  -verify the connection with:
  
    # ping archlinux.org  
  
1.8 Update the system clock  
1.9 Partition the disks
  -format all drives as ext4 Linux Filesystem.
  -boot drive needs 2 partitions: a 300M EFI boot partition
   and the rest of the drive is Linux x86_64 root (ext4)
  -list the drives with:
    # lsblk -l

  -and use cfdisk to make the partitioning easy.

1.10 Format the partitions 
1.11 Mount the file system

/*******************/
/* 2. Installation */
/*******************/

2.1 Select the mirrors
  -use vim to open the mirrorlist at /etc/pacman.d/mirrorlist and 
   move the American mirror to the top of the list.

2.2 Install essential packages
  -in addition to the essential packages, install man pages, vim
   for early text editing, and networkManager.
    
    # pacstrap -K /mnt base linux linux-firmware
                       man-db man-pages texinfo
                       vim networkmanager sudo


/***************************/
/* 3. Configure the system */
/***************************/

3.1 Fstab
3.2 Chroot
3.3 Time zone
3.4 Localization
3.5 Network configuration
  -after setting up the hostname file, set up NetworkManager so the internet
   works on reboot.

    # systemctl enable NetworkManager.service

3.6 Initramfs
3.7 Root password
3.8 Boot loader
  -use GRUB bootloader, very easy. 
  -first command installs the packages.
  -second installs bootloader
  -third configures bootloader

    # pacman -S grub efibootmgr
    # grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
    # grub-mkconfig -o /boot/grub/grub.cfg

  -then, intel microcode
  -install ucode and reconfigure grub so it applies the microcode

    # pacman -S intel-ucode
    # grub-mkconfig -o /boot/grub/grub.cfg

-finished with basic installation
-exit chroot, unmount drives and shutdown:

  # exit
  # umount -R /mnt
  # shutdown +0

-remove the installation USB and boot into the new system.


/****************/
/* Post-install */
/****************/

-this section sets up the newly installed system. Login to the new system
 as root.
-setup a non-root user and set the password:
  
  # useradd -m *user*
  # passwd *user*
    
-add the new user to the sudoers file with visudo
  
  # EDITOR=vim visudo

    *user* ALL=(ALL:ALL) ALL    // add this line to the file
    
-then logout of root and login as the new user. 
-verify the internet:

  $ ping archlinux.org

-if on wifi, you may need to connect manually:

  $ nmcli device wifi list
  $ nmcli device wifi connect "SSID" password "password"

-setup pacman by editing pacman.conf to enable the multilib repo and
 enable parallel downloading:
 (uncomment the lines):
  
    "/etc/pacman.conf"
    [options]
    ParallelDownloads = 5
    ...
    [multilib]
    Include = /etc/pacman.d/mirrorlist

-run pacman once to generate and sync databases:

  $ sudo pacman -Syu

-run reflector once here for the fastest and most up to date mirrors

  $ sudo pacman -S reflector
  $ sudo reflector --latest 20 --sort rate --save /etc/pacman.d/mirrorlist

-download and run the installer script to install packages and perform
 basic configuration:

  $ curl -LJO https://github.com/markgallant01/.dotfiles/raw/main/scripts/initial_setup.sh
  $ chmod +x initial_setup.sh
  $ ./initial_setup.sh


/***********************/
/* POST-INSTALL-SCRIPT */
/***********************/

-if nvidia drivers were installed, you must edit the file 
 /etc/mkinitcpio.conf to remove the 'kms' module from the HOOKS array.

  $ sudo vim /etc/mkinitcpio.conf

  -after that, re-run the command to regenerate the initramfs

    $ sudo mkinitcpio -P

-you should now be able to launch xorg:
  
  $ startx

-before running the final settings script, must authenticate with github
-launch web browser and login to github account
-the installer script generated new ssh keys. print the public key:

  $ cat ~/.ssh/id_ed25519.pub

  -copy this output and add it to github ssh keys
  -verify the connection:

    $ ssh -T git@github.com

-once authenticated, run the final settings script.
    
  $ ./final_setup.sh

-reboot

/*********************/
/* FINISHING TOUCHES */
/*********************/

-launch discord once to generate the config file.
-edit the shown line in this file so Discord doesn't refuse to launch
 if there's an update that's not in the repo yet:
    
  ~/.config/discord/settings.json
  "SKIP_HOST_UPDATE": true

-on desktop, use these commands to set the volume to 100%:

  $ pactl set-sink-volume @DEFAULT_SINK@ 100%

-create additional directories in the home directory
 for any internal or external drives you want to mount
-set up the fstab here so that drives auto mount 
 (come back to this)
    
-place any wallpapers in ~/Photos/wallpaper/ for feh to use them

-delete the installer scripts:

  $ rm ~/initial_setup.sh ~/final_setup.sh

-log into firefox, discord, etc.

-set firefox font

To-do:
    -add easytag to install list (tag editor)
    -also add ffmpegthumbnailer (for thunar)
    -add gvfs to program list (it's a thing for thunar)
    -find a gtk music player and get all the gtk apps to work with
     the colorschemes
    -look at pywal for settings colorschemes based on wallpaper. Not
     sure if I want this or not
    -apply Xresources patch for ST and DWM
    -figure out colorscheme for transparent terminal visibility
    -customize firefox new tab page with custom css
    -look into LaTeX for document writing
    -new font is otf-droid-nerd
    -make sure rofi stuff is added now that we've switched to it
    -fix colorscheme so it's more readable with terminal transparency
    -figure out music player
    -add back music visualizer thing we got rid of -cava i think it was called
    -add system-monitor thing to install list
    -update this whole doucments tab width?
    -running build hooks [kms] takes a while on laptop. Maybe remove or
     look into?
  -make tabliss use our current wallpaper somehow
  -run through this page and fix errors like the visudo call using neovim
    before neovim has been installed (it should just use vim)
  -for some reason some of the stuff from the final installation script
    did not work such as copying the conf files for the touchpad and stuff.
    Not sure what else may not have worked. Figure out why this did not work.
  -add something about the symlink fix for fmod pipewire bug: https://wiki.archlinux.org/title/PipeWire#FMOD_games_crashing_under_PipeWire
  -add section for android USB connection android-file-transfer package
  -look into different fonts, maybe noto fonts. check bookmark.
  -maybe add section about using nvidia-settings to configure
   monitor stuff correctly and write to x config file
  -find a replacement for xBacklight because it does not work
   without the intel video driver
  -keep an eye on system stability now that we've switched the
   graphics drivers around
  -consider adding documentation window back to cmp
  -https://www.vimfromscratch.com/articles/vim-folding
  -use link to add fold icon to column and make folding
   look a bit better maybe
  -get that neovim plugin that shows block context?
  -format this guide so it fits neatly in one half-screen console
  -consider adding xorg.conf file to repo to save monitor settings
  -maybe add SDL stuff to installer
  -setup a good screen locker that blocks tty access maybe
  -split neovim init into separate files for better organization
  -make keybind cheat sheet
  -add video editing software to install script
  -setup cava config file and try to get it to work only with cmus
  -thunar image / video thumbnails
  -firefox developer mode
  -add overthewire programs like telnet and nmap
  -gtk dark theme for lutris and other stuff
  -firefox config file? Discord?
  -get music library incorporated somehow
  -set up wallpaper script
  -find a way to wrap reflector calls into script
  -consider adding a reflector call to 2.1 to get the best possible mirror
  -look into this: https://wiki.archlinux.org/title/Gamemode#top-page
  -go through bookmarked stuff
  -power management? (acpi?)

