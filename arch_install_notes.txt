
This is a compilation of notes to be used as supplementary material for
an arch linux install. Use alongside the installation guide found at
wiki.archlinux.org.

/***********************/
/* 1. Pre-installation */
/***********************/

1.1 Acqure an installation image
1.2 Verify signature
1.3 Prepare an installation medium
    -use a fresh arch iso
    -dd command is easiest:

        $ dd bs=4M if=path/to/archlinux.iso of=/dev/flashDrive \
            conv=fsync oflag=direct status=progress

1.4 Boot the live environment
1.5 Set the console keyboard layout and font
1.6 Verify the boot mode
1.7 Connect to the internet
    -If you're wired then just plug in the ethernet and it should work
    -If using wifi, connect to the network with iwctl.

    # iwctl                 // this will give you an interactive prompt
    [iwd]# device list               // get the name of wireless device
    [iwd]# station *device* scan          // scan for wireless networks
    [iwd]# station *device* get-networks               // list networks
    [iwd]# station *device* connect *SSID*        // connect to network

    -enter the password when prompted and then exit with Ctrl+d.
    -verify the connection with:

        # ping archlinux.org

1.8 Update the system clock
1.9 Partition the disks
    -format root drive as xfs.
    -boot drive needs 2 partitions: a 1G EFI boot partition
     and the rest of the drive is Linux x86_64 root xfs
    -list the drives with:

        # lsblk -l

    -and use cfdisk to make the partitioning easy.

    -for the swap file, on desktop suspend is unnecessary so 16G is
     more than enough. On a laptop use 1.5x RAM.

1.10 Format the partitions
1.11 Mount the file system

/*******************/
/* 2. Installation */
/*******************/

2.1 Select the mirrors
    -use vim to open the mirrorlist at /etc/pacman.d/mirrorlist and
     move the American mirror to the top of the list.

2.2 Install essential packages
    -in addition to the essential packages, install some more stuff that
     will be useful.

        # pacstrap -K /mnt base linux linux-firmware
            man-db man-pages texinfo
            vim networkmanager sudo
            reflector git
            xfsprogs                 <- depends on filesystem
            intel-ucode OR amd-ucode <- choose correct for CPU

/***************************/
/* 3. Configure the system */
/***************************/

3.1 Fstab
3.2 Chroot
3.3 Time zone
3.4 Localization
3.5 Network configuration
    -after setting up the hostname file, run this command to ensure
     NetworkManager starts up on reboot:

        # systemctl enable NetworkManager.service

3.6 Initramfs
3.7 Root password
3.8 Boot loader
    -Systemd-boot comes with systemD and is easy to use. It's already
     installed on the system. Initialize it:

        # bootctl install

    -Next, a loader configuration file must be created and set:
     (note 'efi' below corresponds to wherever the EFI directory was
     mounted. Probably /boot.)
    -These fields are separated by a space, not a tab.
     SystemD won't read tabs.

        "efi/loader/loader.conf"
        default arch.conf
        timeout 0
        console-mode keep

    -You'll need a corresponding arch.conf file in efi/loader/entries.
    -The UUID must be replaced with the UUID of the root partition.
     Copy it from the /etc/fstab file.
    -These can be tab-separated:

        "efi/loader/entries/arch.conf"
        title   Arch Linux
        linux   /vmlinuz-linux
        initrd  /initramfs-linux.img
        options root=UUID=xxxx-xxxxx-xxxx-xxxx-xxxx-xxxx  rw

    -use this command to make sure there's a new Arch Linux boot entry:

        # bootctl list

-finished with basic installation
-exit chroot, unmount drives and shutdown:

    # exit
    # umount -R /mnt
    # shutdown +0

-remove the installation USB and boot into the new system.

/****************/
/* Post-install */
/****************/

-this section sets up the newly installed system. Login to the
 new system as root.

-First, verify that the microcode is loaded properly. Use this
 command and read the output:

    # lsinitcpio --early /boot/initramfs-linux.img | head -n 6

-The last 2 lines should reference microcode for your CPU.

-setup a non-root user and set the password:
-in the wheel group so they can sudo and video
 so they can adjust the brightness

    # useradd -m -G wheel,video <username>
    # passwd *user*

-add the new user to the sudoers file with visudo

    # EDITOR=vim visudo

    %wheel ALL=(ALL:ALL) ALL    // uncomment this line

-then logout of root and login as the new user.

-verify the internet:

    $ ping archlinux.org

-if on wifi, you may need to connect manually:

    $ nmcli device wifi list
    $ nmcli device wifi connect "SSID" password "password"

-setup pacman by editing pacman.conf to enable the multilib repo
 and color
 (uncomment the lines):

    "/etc/pacman.conf"
    [options]
    ...
    Color
    ...
    VerbosePkgLists
    ...
    [multilib]
    Include = /etc/pacman.d/mirrorlist

-download the setup and config files:

    $ git clone https://github.com/markgallant01/.dotfiles.git

-make the setup scripts executable:

    $ chmod +x ~/.dotfiles/scripts/setup.sh
    $ chmod +x ~/.dotfiles/scripts/install_packages.sh

-run the setup script:

    $ ~/.dotfiles/scripts/setup.sh

-if nvidia drivers were installed, you must edit the file
 /etc/mkinitcpio.conf to remove the 'kms' module from the HOOKS array.
 This ensures the nouveau module will not be loaded during boot:

    $ sudo vim /etc/mkinitcpio.conf

    -after that, re-run the command to regenerate the initramfs

        $ sudo mkinitcpio -P

-Reboot and then launch the display server

    $ startx

/*********************/
/* POST-INSTALLATION */
/*********************/

-Some things cannot easily be automated and require manual setup here.
-Starting with Firefox and LastPass is easiest because you'll need to
 log into things

FIREFOX & LASTPASS:
    -Launch Firefox and sign in to start syncing everything
    -go down through the settings and verify everything
    -Extensions to install:
        -uBlock Origin
        -Reddit Enhancement Suite
        -LastPass
    -Install LastPass & Reddit Enhancement Suite extensions
        -Go into the LastPass extension settings and disable
         "Automatically fill login information"
        -make sure both extensions are pinned and active in private
         browser sessions
    -double check the browser font settings and set the history to
     wipe every time you close the browser. Disable any kind of
     autofill

DISCORD:
    -launch discord once to generate the config file.
    -add the shown line in this file so Discord doesn't refuse
     to launch if there's an update that's not in the repo yet:

        ~/.config/discord/settings.json
        "SKIP_HOST_UPDATE": true

    -go into the discord settings and set the font size to 20.
    -adjust the mic threshold if you have a microphone setup
    -Disable 'minimize to tray' and automatic startup under
     Linux settings

THUNAR:
    -edit /usr/share/gvfs/mounts/network.mount and change
     the last line to:

        /usr/share/gvfs/mounts/network.mount
        AutoMount=false

    -this helps with thunar taking a long time to startup the
     first time

WALLPAPERS:
    -Log into google drive and download the Wallpaper folder.
    -Unzip that folder into the ~/Pictures/ directory to make
     them useable by the system's wallpaper scripts

GITHUB:
    -authenticate with github:
    -launch web browser and login to github account.
    -the installer script generated new ssh keys.
    -print the public key:

        $ cat ~/.ssh/id_ed25519.pub

    -copy this output and add it to github ssh keys
    -verify the connection:

        $ ssh -T git@github.com

    -once authenticated, fix cloned repos

        $ rm -rf ~/.dotfiles

        $ git clone git@github.com:markgallant01/.dotfiles.git

/******************/
/* OPTIONAL STUFF */
/******************/

-This stuff depends on the PC setup and may or may not be done

VOLUME:
    -On desktop, you probably want to set the volume to 100%:

        $ pactl set-sink-volume @DEFAULT_SINK@ 100%

EXTERNAL DRIVES:
    -create additional directories in the home directory
     for any internal or external drives you want to mount:

        $ mkdir nvme_games ssd_storage

    -set up the fstab here so that drives auto mount. Consult
     https://wiki.archlinux.org/title/Fstab for reference.

/***********/
/* THE END */
/***********/

To-do:
	-modify qtile layout widget so that clicking the
	 widget name does not change the layout
	-make some workspaces default to the second screen
	 if it exists
	-check out mini.nvim and think about switching to a
	 mainly mini-based setup
	-dual_kawase blur doesn't work with the xrender backend
	 so figure that out. i kinda like it with no bur so
	 think about it
	-the performance issues from desktop were from picom
	 glx backend. switching to xrender backend seems to
	 fix it. investigate this.
	-fix formatting here
	-check out zathura document reader
    -discord isn't showing the notification icon for unread messages
     or making the ping sound so figure that out. there's stuff about
     it on the wiki.
    -figure out docker containers with bookmarks and figure out how to
     use neovim with our docker project for CS326
    -trim down neovim
    -find some good drawn fall wallpapers and think about qtile and
     alacritty vs dwm and st
    -polybar should match rofi. maybe make some themes that can be
     swapped between. maybe even match them to wallpapers.
    -make it so that empty workspaces are darker color so its obvious
    -id like a visual indicator for volume changes and brightness.
     can definitely do this with eww. think if theres another way
    -copy the qtile symbols for the workspaces into dwm
    -start configuring polybar
    -add keyboard modifications to xorg configuration. use bookmarks
     to the arch wiki keyboard page. make the keyboard repeat rate
     persistent and do the caps lock / control swap for laptops
    -add a firefox section to copy over the user.js and also make a
     backup of the old profile
    -try to make the install script copy its output to a log file so
     we can check for any issues afterward
    -keep learning about gentoo once we're at school. write up a guide
     for it based on this one. I really do like it
    -probably write our own widgets for volume, brightness, battery,
     etc. that way we dont need to install more dependencies and we
     know exactly what its doing.
    -supress the output from tty because its polluting the login screen
     (or use a login manager)
    -done with dmenu so start ricing rofi
    -get or make a good terminal theme probably copy solarized osaka
    -get minecraft and wow added to the installer thing
    -sort all bookmarks
    -go through the browser setup section and make sure it's good
     for firefox. basically just log in and set settings and everything
     should sync
    -consider a wallpaper switching keybind in dwm like before.
    -think about a screen locker and blocking tty and blocking killing
     the x server and whatever else. this is kinda complex and we might
     want a login manager to bypass it
    -consider adding a section for steam setup including log-in and
     settings. disable gpu acceleration because it sucks shit
    -find nice drawn wallpapers for fall / winter / spring just like
     we did for summer
    -nvim takes way too long to startup so troubleshoot that:
     :Lazy profile
    -reduce keyboard repeat delay even more if possible
    -rework nvim config because startup time is attrocious. trim down
     addons. consider trying native package manager
    -setup slock or another screen locker
    -set up 2 factor auth with the lastpass authenticator because
     google's authentication sucks
    -check out tlp for power management on laptops. helps with battery
     life potentially a lot
    -reconfigure the brave section to be about firefox. make homescreen
     using common websites. currently: DGG, Github, Reddit, Wikipedia,
     Arch Wiki, Arch Repository, Chaotic AUR, Raindrop(X), Drive,
     Gumaverse, /tv/, /g/
    -add a section for configuring thunar maybe. enabling auto mounting
     of usb drives and displaying hidden files, anything else.
    -use betterfox and update the part of the installer that deals
     with configuring Brave
    -figure out what we need to do to set fonts system-wide. Awesome,
     terminal (alacritty), neovim, firefox, etc all need to use the same
     font
    -set Rofi up
    -figure out how to make wallpaper set a default gentoo wallpaper
     when its run without the wallpaper folder existing yet
    -run through the general recommendations found here:
     https://wiki.archlinux.org/title/General_recommendations
    -I love this console rain:
        https://github.com/saitamasahil/matrix
     so figure out how to incorporate this into our setup
    -take another look at awesomeWM and try to figure out the bar /
     widget system. it would be cleaner to use widgets for the top bar
     and for system info so we dont require polybar and conky. polybar
     is having some weird issues with how it interacts with the WM so
     it would just be cleaner.
    -get subtitle puller addon thing for jellyfin. check
     bookmarks
    -maybe get nicer icons for qBittorrent and protonVPN but probably
     not
    -make awesomeWM open all new windows in the center
    -find a better disk utility than the baobab one. it
     doesn't seem to show much info
    -problem with fullscreen since we added the floating rule so figure
     that out
    -get jellyfin up and running for media consumption
    -make a nice landing page on web browser with common sites like
     arch wiki, reddit, youtube, etc. don't show bookmark bar by default
     because i rarely ever click it directly
    -keep configuring topbar. make the tags group look good and
     function. get rid of the clock on the right side and replace it
     with a nice systray with good looking icons for volume, network,
     brightness, maybe buttons to restart and such
    -fix nvim bufferline's background color to match lualine
    -sort out alacritty's font (nerdfont)
    -https://wiki.archlinux.org/title/GNOME/Keyring#PAM_step
     see if this fixes gnome-keyring asking for password sometimes,
     like when brave browser is launched. try to remember what else
     would cause the keyring to launch. if it's fixed, add a section
     to the installation guide.
    -looks like thunar is handling auto-mounting so look into that
    -continue to configure alacritty. font size?
    -configure alacritty and clean up stuff
    -get a good nerd font patched with icons
    -stuff I want:
        -wallpaper spans entire screen including top bar. top bar should
         be transparent between the widgets because it looks cool
        -make menu stuff transparent like rofi and terminal with blur
         for a nice modern glass effect
        -neovim should not be transparent
        -if something isn't transparent it should have the same back
         ground as the desktop (like rofi)
        -window border should be thicker and color should match color
         scheme too
    -reduce keyboard repetition rate so that we can fly around nvim
     faster
    -NVM is slowing down the terminal startup due to the initialization
     stuff it adds to the bachrc file. this is a pain in the ass
    -maybe add curl nvm installation idk yet
     Stuff we want for awesomeWM:
        -nice program launcher that lets me search for programs
         I've forgotten. Maybe Rofi?
        -login manager that looks nice. LightDM?
        -lock screen finally so we can walk away from PC without
         killing the x-server
    -figure out why USB stuff seems to automount on laptop but not
     desktop
    -maybe get suspend / hibernate to work
    -also laptop is starting on incorrect brightness but idk why
    -modify brightness step because we should be able to go darker than
     we currently can
    -get brighntess control working for desktop monitors
    -TLP for laptop battery saving. IDK if this will mess up desktop
     so come back to it
    -add tlp and the systemctl stuff to make it work. default settings.
    -add minecraft audio fix maybe
    -something weird going on with mounting the other drives on
     desktop. Maybe switch to UUIDs in case the labels are switching
    -get a cool nvim startup screen
    -change the wallpaper script to not switch to daytime wallpaper
     until 5am. 4 is too early.
    -modify the setup script to copy the screen setup script to the
     .config folder and add a step to set that up properly
    -might want to add a note about the intel i915 psr kernel parameter
     for that weird screen bug:
     https://wiki.archlinux.org/title/intel_graphics#Screen_flickering
    -consider adding a section about configuring Xorg. Consult
        https://wiki.archlinux.org/title/NVIDIA#Xorg_configuration
    -setup a pacman hook to clean up the paccache after each install
    -use musicBrainz picard to tag all our music and sort it. then add
     picard to the install list
    -customize brave new tab page with custom css
    -add something about the symlink fix for fmod pipewire bug:
     https://wiki.archlinux.org/title/PipeWire#\
     FMOD_games_crashing_under_PipeWire
    -maybe add SDL stuff to installer
    -setup a good screen locker that blocks tty access maybe
    -add overthewire programs like telnet and nmap as we go through it
    -look into this:
        https://wiki.archlinux.org/title/Gamemode#top-page
    -power management? (acpi?)

