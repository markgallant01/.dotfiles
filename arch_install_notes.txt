This is a compilation of notes to be used as a walkthrough / cheat-sheet
for an arch linux install. Use alongside the official install guide, not
as a substitute, in case anything about the process changes.

/* 1. Pre-installation */

1.1 Acqure an installation image
1.2 Verify signature
1.3 Prepare an installation medium
  -use a fresh install iso
  -dd command is easiest:
    $ dd bs=4M if=path/to/archlinux.iso of=/dev/flashDrive
         conv=fsync oflag=direct status=progress

1.4 Boot the live environment
1.5 Set the console keyboard layout
1.6 Verify the boot mode 
1.7 Connect to the internet
  If you're wired then just plug in the ethernet and it should work fine.
  If using wifi, connect to the network with iwctl.
    
    # iwctl                   // this will give you an interactive prompt
    [iwd]# device list            // get the name of wireless device
    [iwd]# station *device* scan      // scan for wireless networks
    [iwd]# station *device* get-networks    // list networks
    [iwd]# station *device* connect *SSID*
    
  Enter the password when prompted and then exit with Ctrl+d.
  
  Verify the connection with:
  
    # ping archlinux.org  
  
1.8 Update the system clock  
1.9 Partition the disks
  -format all drives as ext4 Linux Filesystem.
  -boot drive needs 2 partitions: a 300M EFI boot partition
    and the rest of the drive is Linux x86_64 root (ext4)

  -list the drives with:
    # lsblk -l

  -and use cfdisk to make the partitioning easy.

1.10 Format the partitions 
1.11 Mount the file system

/* 2. Installation */

2.1 Select the mirrors
  use vim to open the mirrorlist at /etc/pacman.d/mirrorlist and 
  move the American mirror to the top of the list.

2.2 Install essential packages
  Use pacstrap to install initial packages:
    
    # pacstrap -K /mnt base linux linux-firmware base-devel vim
                       networkmanager reflector man-db 
                       man-pages texinfo
                       
/* 3. Configure the system */

3.1 Fstab
  -set up the fstab here maybe at some point
  -possibly move setting up other disks to another section
    
3.2 Chroot
3.3 Time zone
3.4 Localization
3.5 Network configuration
3.6 Initramfs -skip
3.7 Root password
3.8 Boot loader

/* 4. Reboot */

/* Post-install */
This section sets up the newly installed system. Login to the new system
as root.
  
Setup a non-root user and set the password:
  
  $ useradd -m *user*
  $ passwd *user*
    
Add the new user to the sudoers file with visudo
  
  $ EDITOR=neovim visudo
  *user* ALL=(ALL:ALL) ALL
    
Then logout of root and login as the new user. Get the network up and
running with NetworkManager:

  $ systemctl enable NetworkManager.service
  $ nmcli
  $ ping archlinux.org

With the internet working, pacman can be used to install packages.

Before installing anything run reflector again to sort the mirrors for
the newly installed system.
  
  $ sudo reflector --latest 20 --sort rate 
                   --save /etc/pacman.d/mirrorlist

Create new user's home directory folders:

  $ pacman -S xdg-user-dirs
  $ xdg-user-dirs-update
  $ mkdir Screenshots Trash Usb
    
Setup pacman by editing pacman.conf to enable the multilib repo and
enable parallel downloading:
  
  "/etc/pacman.conf"
  [options]
  ParallelDownloads = 5
  ...
  [multilib]
  Include = /etc/pacman.d/mirrorlist
  
Set ParallelDownloads to 5 as shown and uncomment the multilib lines.
  
  First download and setup git:
    $ sudo pacman -S git
    $ git config --global user.name "user_name"
    $ git config --global user.email "email"
    $ git config --global init.defaultBranch main
    $ git config --global color.ui auto
    $ git config --global pull.rebase false
    
  Install openssh for generating ssh keys for git:
    $ sudo pacman -S openssh
  
  Download X server:
    $ sudo pacman -S xorg-server
    
  Then install the proper set of GPU drivers:
    Intel:
      $ sudo pacman -S mesa lib32-mesa xf86-video-intel vulkan-intel
      
    Nvidia:
      $ sudo pacman -S nvidia nvidia-utils lib32-nvidia-utils
      
      For nvidia, follow these instructions to ensure everything works properly:
        https://wiki.archlinux.org/title/NVIDIA#Installation
      
    Regardless of which GPU driver set you install, install vulkan-icd-loader so vulkan works:
      $ sudo pacman -S vulkan-icd-loader
  
  Window manager, terminal, and compositor:
    Install dependencies first:
      $ sudo pacman -S libxft libxinerama ttf-dejavu-nerd

    for not needing to authenticate just yet since no graphical user interface still,
    try using:
    $ git clone https://github.com/markgallant01/dwm
    $ git clone https://github.com/markgallant01/st
      this should let us download dwm and st without being authenticated with github yet.
      
    $ git clone git@github.com:markgallant01/dwm.git
    $ cd dwm
    $ make
    $ make clean install
    
    $ pacman -S picom
    
  Login manager:
    $ pacman -S xorg-xinit
    
  Wallpaper:
    $ pacman -S feh
    
    Place any wallpapers in ~/Photos/wallpaper/ for feh to use them
    
  Pull down dotfiles:
    $ git clone git@github.com:markgallant01/.dotfiles.git
    $ cd .dotfiles
    
    Open the readme and follow the insructions to set up the symlinks
    and put the files in the correct places.
      
  You should now be able to use the command 'startx' to launch into a
  graphical system.

  blueman and network-manager-applet need to be installed before startx will launch.

  once startx works and we get a graphical interface, follow github instructions to generate a new
  ssh key and add it to github. This will require openssh and a web browser and the ability to log into
  github. Once authenticated, delete dwm and st folders and clone the repo properly so you have a real
  repo with push permissions.
    
  Power management:
    (come back to this)
    $ pacman -S acpi
    
  Sound system:
    $ pacman -S pipewire lib32-pipewire wireplumber pipewire-pulse blueman
    
  Clock synchronization:
    $ systemctl enable --now systemd-timesyncd.service
  
  Performance:
    $ pacman -S htop
    
  USB stuff:
    $ pacman -S udisks2
  
  Printing:
    Maybe setup printing here in the future
    
  Downloading music from youtube:
    $ sudo pacman -S yt-dlp
    
  Web browsers:
    $ sudo pacman -S firefox chromium
    
  Discord:
    $ sudo pacman -S discord
    
    Edit the shown line in this file so Discord doesn't refuse to launch
    if there's an update that's not in the repo yet:
    
    ~/.config/discord/settings.json
      "SKIP_HOST_UPDATE": true
    
  Misc utilities:
    $ sudo pacman -S neofetch unzip xclip scrot ranger cmus thunar xorg-backlight  // maybe sort these at some point
    
  Gaming:
    $ sudo pacman -S steam lutris
    
    Install all of these wine dependencies needed for gaming:
      sudo pacman -S --needed wine-staging giflib lib32-giflib libpng lib32-libpng libldap lib32-libldap gnutls lib32-gnutls \
                     mpg123 lib32-mpg123 openal lib32-openal v4l-utils lib32-v4l-utils libpulse lib32-libpulse libgpg-error \
                     lib32-libgpg-error alsa-plugins lib32-alsa-plugins alsa-lib lib32-alsa-lib libjpeg-turbo lib32-libjpeg-turbo \
                     sqlite lib32-sqlite libxcomposite lib32-libxcomposite libxinerama lib32-libgcrypt libgcrypt lib32-libxinerama \
                     ncurses lib32-ncurses ocl-icd lib32-ocl-icd libxslt lib32-libxslt libva lib32-libva gtk3 \
                     lib32-gtk3 gst-plugins-base-libs lib32-gst-plugins-base-libs vulkan-icd-loader lib32-vulkan-icd-loader
    
  Setup Yay to use the AUR:
    $ git clone https://aur.archlinux.org/yay.git
    $ cd yay
    $ makepkg -si
    
  AUR stuff:
    $ yay -S cava
    
  xrandr --output DP-0 --mode 2560x1440 --rate 165.00 --output DP-2 --mode 2560x1440 --rate 165.00 --right-of DP-0 &

  To-do:
    -look into this: https://wiki.archlinux.org/title/Gamemode#top-page
    -go through bookmarked stuff
    -put neovim somewhere appropriate, before the dotfiles.
    -figure out where github setup goes (and proper cloning of dwm, st, and dotfiles)
    -continue cleaning up these notes
    -sort downloads into a separate script that can be run at some point after the initial setup is complete
     (automate as much of this as possible)
    -make sure nvidia stuff is fleshed out
    -add to .xinitrc so that laptop has its own xrandr line
    -dwm systray patch
    -look at picom, decide how to set it up
    -setup dwm statusbar top right (brightness, volume, date, time)
